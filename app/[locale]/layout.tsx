// app/layout.tsx
import { use } from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import Navbar from "@/components/navbar/Navbar";
import Footer from "@/components/footer/Footer";
import WhatsAppButton from "@/components/WhatsAppButton";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Invertuneles",
  description:
    "Nuestra empresa ofrece una agenda de asesores disponibles para atender cualquier necesidad que pueda tener. Nos especializamos en proporcionar servicios personalizados para asegurar que cada cliente reciba la atenci√≥n que necesita. ¬°No se pierda nuestros pr√≥ximos eventos! Para mantenerse al d√≠a, s√≠ganos en Instagram o d√© un like a nuestra p√°gina. Para m√°s informaci√≥n y cotizaciones, no dude en ponerse en contacto con nosotros. Estamos aqu√≠ para ayudarle a encontrar soluciones efectivas y personalizadas. Su satisfacci√≥n es nuestra prioridad. ¬°Esperamos poder servirle pronto!",
  keywords: ["acerca de nosotros", "servicios", "valores"],
  icons: {
    icon: "/",
  },
};

type Props = {
  children: React.ReactNode;
  params: Promise<{ locale: string }>; // üëà importante: params es ahora una promesa
};

// NOTE: EL rootlayout es un HOC (Higher order component) - por que se mandan componentes children
export default function RootLayout({ children, params }: Props) {
  const { locale } = use(params);

  return (
    <html lang={locale}>
      <body
        className={`
          min-h-screen flex flex-col      /* llena la altura y apila */
          ${geistSans.variable} ${geistMono.variable}
          antialiased
        `}
      >
        <Navbar locale={locale} />
        {children}
        <Footer locale={locale} />
        <WhatsAppButton />
      </body>
    </html>
  );
}
